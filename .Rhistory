fix(USArrests)
#3-Calculer l'ACP en utilisant les donnes de demonstration
res.pca = PCA(USArrests,ncp=2,graph=FALSE)
res.pca
library(factoextra)
data("USArrests")
fix(USArrests)
res.pca = PCA(USArrests, ncp = 2, graph = FALSE)
res.pca
library(FactoMineR)
library(factoextra)
#2-Importer les donnees de demonstrAtion
#import from the exterieur read.csv
data("USArrests")
fix(USArrests)
#3-Calculer l'ACP en utilisant les donnes de demonstration
res.pca = PCA(USArrests, ncp = 2, graph = FALSE)
res.pca
library(FactoMineR)
library(factoextra)
data("USArrests")
fix(USArrests)
res.pca = PCA(USArrests, ncp=2, graph = FALSE)
res.pca
library(FactoMineR)
data("USArrests")
fix(USArrests)
res.pca = PCA(USArrests, ncp=2, graph = FALSE)
res.pca
library(FactoMineR)
library(factextra)
data("USArrests")
fix(USArrests)
res.pca = PCA(USArrests,ncp=2,graph=FALSE)
eig.val <- get_eigenvalues(res.pca)
eig.val
eig.val <- get_eigenvalues(res.pca)
library(factextra)
library(factextra)
library(factoextra)
eig.val <- get_eigenvalues(res.pca)
eig.val
eig.val <- get_eigenvalue(res.pca)
eig.val
res.pca = PCA(USArrests,ncp=2,graph=FALSE)
res.pca
library(FactoMineR)
library(factoextra)
data("USArrests")
fix(USArrests)
res.pca = PCA(USArrests,ncp=2,graph=FALSE)
res.pca
res.pca$var
eig.val <- get_eigenvalue(res.pca)
eig.val
barplot(eig.val[, 2],
names.args= 1:nrow(eig.val),
main="variance explained byPCs (%)",
xlab = "Principal Components",
ylab = "Percentage of variances",
col = "steelblue")
lines(x = 1:nrow(eig.val),eig.val[, 2],type = "b",pch = 19,col = "red")
barplot(eig.val[, 2],
names.arg= 1:nrow(eig.val),
main="variance explained byPCs (%)",
xlab = "Principal Components",
ylab = "Percentage of variances",
col = "steelblue")
barplot(eig.val[, 2],
names.arg=1:nrow(eig.val),
main="variance explained byPCs (%)",
xlab = "Principal Components",
ylab = "Percentage of variances",
col = "steelblue")
#add connected line segments to the plot
lines(x = 1:nrow(eig.val),eig.val[, 2],type = "b",pch = 19,col = "red")
res.pca
data("USArrests")
fix(USArrests)
plot(res.pca,choix = "ind", autolab = "yes")
plot(res.pca, choix = "var", autolab = "yes")
plot(res.pca, choix = "ind", autolab = "yes")
plot(res.pca, choix = "var", autolab = "yes")
library(FactoMineR)
library(factoextra)
getwd()
setwd("infarcus.txt")
list.files()
Victime <- read.csv("infarcus.txt")
infarcus$V8 <- NULL
infarcus$V9 <- NULL
infarcus
fix(infarcus)
#3-Calculer l'ACP en utilisant les donnes de demonstration
res.victime = PCA(infarcus,ncp=2,graph=FALSE)
res.victime
res.victime$var
res.victime = PCA(infarcus,ncp=2,graph=FALSE)
res.victime
res.victime$var
install.packages("forecast")
install.packages("dataseries")
View(infarcus)
library(tseries)
library(dataseries)
library(forecast)
View(infarcus)
library(tseries)
library(dataseries)
library(forecast)
#importing the dataset
data<-read.csv("C:\Users\MSII\Documents\Serie Chrono\coronadata.csv")
coronadata <- read.csv("~/Serie Chrono/coronadata.csv")
View(coronadata)
summary(data)
summary(coronadata)
View(coronadata)
View(coronadata)
library(readxl)
dataset <- read_excel(NULL, n_max = 176)
View(dataset)
coronadata <- read.csv("~/Serie Chrono/coronadata.csv")
View(coronadata)
#importing the dataset
setwd("C:/Users/MSII/Documents/Serie Chrono")
data<-read.csv("corona.csv")
View(data)
summary(coronadata)
summary(data)
View(data)
#presentation graphique
plot(data)
#presentation graphique
plot(t,Y)
data<-read.csv("corona.csv", header = T)
head(data)
attach(data)
dim(data)
summary(data)
#presentation graphique
layout(1)
plot(t,Y)
plot(t,data)
plot(data)
plot(Date..t,nombre.de.cas)
#converting it into time series
data<-ts(data)
plot.ts(data)
#presentation graphique
layout(1)
plot(data)
plot(data)
View(data)
data<-read.csv("corona.csv", header = T)
View(data)
head(data)
dim(data)
summary(data)
#presentation graphique
layout(1)
plot(data)
plot(data)
#presentation graphique
layout(2)
#presentation graphique
plot(data)
#presentation graphique
plot(nombre.de.cas,Date..t)
data<-read.csv("corona.csv", header = T)
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 24*12)
#presentation graphique
plot(data.ts)
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = NULL)
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 12)
#presentation graphique
plot(data.ts)
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 12, format("%d/%m/%y"))
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 12, format.Date("%d/%m/%y"))
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 1)
#presentation graphique
plot(data.ts)
#presentation graphique
plot(data)
#presentation graphique
plot(data)
plot(data.ts)
#converting it into time series
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 52*7)
plot(data.ts)
tail(data$Date..t)
Date = as.POSIXct(strptime(data$Date..t, "%m-%d"))
cases <- as.numeric(data$nombre.de.cas)
data <- data.frame(Date, cases)
#presentation graphique
plot(data)
summary(data)
data<-read.csv("corona.csv", header = T)
#presentation graphique
plot(data)
plot(data.ts)
data_bef<-read.csv("coronadata.csv", header = T)
View(data_bef)
#presentation graphique
plot(data_bef)
View(data_bef)
data_bef.ts<-ts(data_bef$nombre.de.cas,start = 1, frequency = 52*7)
plot(data_bef.ts)
View(data_bef)
View(data)
data<-read.csv("coronadata.csv", header = T)
View(data)
plot(data.ts)
#converting it into time series
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 52*7)
plot(data.ts)
#presentation graphique
plot(data)
adf.test(data.ts)
dataDiff<-diff(data.ts)
plot(dataDiff)
adf.test(dataDiff)
acf(dataDiff)
pacf(dataDiff)
model<-tseries::arma(dataDiff, order = c(1,0))
plot(dataDiff)
lines(model$fitted.value, col="red")
summary(model)
model.pred<-predict(model, n.ahead=10)
model.pred=predict(model, n.ahead=10)
model.pred=predict(model, n.ahead=1)
dataPred<-forecast(model, h=10)
model<-arima(dataDiff, order = c(1,0,0))
plot(dataDiff)
lines(model$fitted.value, col="red")
model<-tseries::arma(dataDiff, order = c(1,0))
plot(dataDiff)
lines(model$fitted.value, col="red")
summary(model)
dataPred<-forecast(model, h=10)
plot(dataPred, include=20)
dataPred<-forecast(model)
dataPred<-forecast(model$fitted.value)
library(tseries)
library(dataseries)
library(forecast)
setwd("C:/Users/MSII/Documents/Serie Chrono")
data<-read.csv("coronadata.csv", header = T)
summary(data)
plot(data)
View(data)
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 52*7)
plot(data.ts)
adf.test(data.ts)
dataDiff<-diff(data.ts)
plot(dataDiff)
adf.test(dataDiff)
adf.test(dataDiff)
acf(dataDiff)
pacf(dataDiff)
acf(dataDiff)
model<-tseries::arma(dataDiff, order = c(1,0))
plot(dataDiff)
lines(model$fitted.value, col="red")
summary(model)
dataPred<-forecast(model, h=10)
dataPred<-predict(model,n.ahead=10)
model<-tseries::arima(dataDiff, order = c(1,0,0))
plot(dataDiff)
lines(model$fitted.value, col="red")
arima(dataDiff, order = c(1,0,0))
plot(dataDiff)
lines(model$fitted.value, col="red")
dataPred<-predict(model,n.ahead=10)
arima(dataDiff, order = c(2,0,0))
arima(dataDiff, order = c(0,0,1))
arima(dataDiff, order = c(1,0,1))
arima(dataDiff, order = c(1,0,2))
arima(dataDiff, order = c(1,0,3))
arima(dataDiff, order = c(2,0,3))
plot(dataDiff)
lines(model$fitted.value, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=10)
plot(dataDiff)
lines(dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=10)
plot(dataDiff)
lines(arima101$fitted.value, col="red")
lines(dataPred$pred, col="red")
plot(dataDiff)
lines(model$fitted.value, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=10)
plot(dataDiff)
lines(model$fitted.value, col="red")
lines(dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=0)
plot(dataDiff)
lines(dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=500)
plot(dataDiff)
lines(dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred=2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima203<-arima(dataDiff, order = c(2,0,3))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,2))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,0))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
auto.arima(dataDiff, seasonal = FALSE)
arima101<-arima(dataDiff, order = c(2,0,2))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
checkresiduals(arima101)
arima100<-arima(dataDiff, order = c(1,0,0))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
plot(dataDiff)
lines(model$fitted.value, col="red")
arima100<-arima(dataDiff, order = c(1,0,0))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima100<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima203<-arima(dataDiff, order = c(2,0,3))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima102<-arima(dataDiff, order = c(1,0,2))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima202<-arima(dataDiff, order = c(2,0,2))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima203<-arima(dataDiff, order = c(2,0,3))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima203<-arima(dataDiff, order = c(2,0,3))
dataPred<-predict(arima203,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima102<-arima(dataDiff, order = c(1,0,2))
dataPred<-predict(arima102,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima202<-arima(dataDiff, order = c(2,0,2))
dataPred<-predict(arima202,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
checkresiduals(arima101)
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
checkresiduals(arima101)
checkresiduals(arima203)
checkresiduals(arima102)
checkresiduals(arima202)
acf(dataDiff)
pacf(dataDiff)
acf(dataDiff)
pacf(dataDiff)
checkresiduals(arima101)
checkresiduals(arima203)
checkresiduals(arima102)
checkresiduals(arima202)
arima701<-arima(dataDiff, order = c(7,0,1))
dataPred<-predict(arima701,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
checkresiduals(arima701)
arima711<-arima(dataDiff, order = c(7,1,1))
dataPred<-predict(arima711,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
checkresiduals(arima701)
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+4*dataPred$pred, col="red")
lines(dataPred$pred-4*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+3*dataPred$pred, col="red")
lines(dataPred$pred-3*dataPred$pred, col="red")
arima101<-arima(dataDiff, order = c(1,0,1))
dataPred<-predict(arima101,n.ahead=100)
plot(dataDiff)
lines(dataPred$pred, col="blue")
lines(dataPred$pred+2*dataPred$pred, col="red")
lines(dataPred$pred-2*dataPred$pred, col="red")
View(data)
plot(data.ts)
data<-read.csv("corona.csv", header = T)
View(data)
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 52*7)
plot(data.ts)
adf.test(data.ts)
dataDiff<-diff(data.ts)
plot(dataDiff)
dataDiff<-diff(data.ts)
plot(dataDiff)
adf.test(dataDiff)
plot(dataDiff)
data<-read.csv("coronadata.csv", header = T)
summary(data)
#converting it into time series
data.ts<-ts(data$nombre.de.cas,start = 1, frequency = 52*7)
plot(data.ts)
adf.test(data.ts)
dataDiff<-diff(data.ts)
plot(dataDiff)
adf.test(dataDiff)
acf(dataDiff)
pacf(dataDiff)
